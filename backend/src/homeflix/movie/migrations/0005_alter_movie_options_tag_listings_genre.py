# Generated by Django 4.0.5 on 2022-07-05 23:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('movie', '0004_alter_movie_created_by'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='movie',
            options={'verbose_name': 'movie', 'verbose_name_plural': 'movies'},
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='tag name')),
                ('movies', models.ManyToManyField(related_name='tags', related_query_name='movie', to='movie.movie')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Listings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('stream_url', models.URLField(verbose_name='stream url')),
                ('season_number', models.PositiveSmallIntegerField(verbose_name='season number')),
                ('episode_id', models.PositiveSmallIntegerField(verbose_name='episode number')),
                ('content_descriptions', models.TextField(max_length=10000, verbose_name='content description')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='movie.movie')),
            ],
            options={
                'verbose_name': 'listing',
                'verbose_name_plural': 'listings',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, verbose_name='genre name')),
                ('movies', models.ManyToManyField(related_name='genres', related_query_name='movie', to='movie.movie')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
            },
        ),
    ]
